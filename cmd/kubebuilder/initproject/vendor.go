/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package initproject

import (
	"fmt"
	"log"
	"os"
	"os/exec"

	"github.com/spf13/cobra"

	"github.com/kubernetes-sigs/kubebuilder/cmd/kubebuilder/util"
	"github.com/kubernetes-sigs/kubebuilder/cmd/kubebuilder/version"
)

const (
	depManifestFile = "Gopkg.toml"
)

var vendorInstallCmd = &cobra.Command{
	Use:   "dep",
	Short: "Install Gopkg.toml and update vendor dependencies.",
	Long:  `Install Gopkg.toml and update vendor dependencies.`,
	Example: `Update the vendor dependencies:
kubebuilder update vendor
`,
	Run: RunVendorInstall,
}

var builderCommit string
var Update bool

func RunVendorInstall(cmd *cobra.Command, args []string) {
	if !depExists() {
		log.Fatalf("Dep is not installed. Follow steps at: https://golang.github.io/dep/docs/installation.html")
	}
	var backupFilename string
	if Update {
		backupFilename = fmt.Sprintf("%s.bkp", depManifestFile)
		if err := os.Rename(depManifestFile, backupFilename); err != nil {
			fmt.Printf("Error renaming existing Gopkg.toml file: %v \n", err)
			return
		}
	}
	depTmplArgs := map[string]string{
		"Version": version.GetVersion().KubeBuilderVersion,
	}
	util.Write(depManifestFile, "dep-manifest-file", depManifestTmpl, depTmplArgs)
	if err := runDepEnsure(); err != nil {
		fmt.Printf("Error running 'dep ensure': %v\n", err)
		fmt.Printf("Previous Gopkg.toml file has been saved at '%s'\n", backupFilename)
		return
	}
	if Update && backupFilename != "" {
		err := os.Remove(backupFilename)
		if err != nil {
			fmt.Printf("Warning: failed to remove backup file: %s", backupFilename)
		}
	}
	return
}

func runDepEnsure() error {
	fmt.Printf("Updating vendor dependencies. Running 'dep ensure'....\n")
	cmd := exec.Command("dep", "ensure")
	o, err := cmd.CombinedOutput()
	if err != nil {
		fmt.Printf("Failed to run 'dep ensure': %s\n", string(o))
		return err
	}
	fmt.Printf("Updated vendor dependencies successfully.\n")
	return nil
}

func depExists() bool {
	_, err := exec.LookPath("dep")
	return err == nil
}

var depManifestTmpl = fmt.Sprintf("%s\n%s", depManifestHeader, depManifestOverride)

const depManifestHeader = `
# Users add deps lines here

[prune]
  go-tests = true
  #unused-packages = true

# Note: Stanzas below are generated by Kubebuilder and may be rewritten when
# upgrading kubebuilder versions.
# DO NOT MODIFY BELOW THIS LINE.
`
